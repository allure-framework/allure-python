[tox]
envlist =
    py{36,37}
    xdist
    integration
    static-check


[testenv]
passenv = HOME

setenv = ALLURE_INDENT_OUTPUT=yep

deps =
    {distshare}/allure-python-commons-test-?.*.zip
    {distshare}/allure-python-commons-?.*.zip
    pyhamcrest
    mock

commands =
    py.test --basetemp={envtmpdir}/tmp \
            --alluredir={envtmpdir}/allure-results \
            -W ignore::pytest.PytestExperimentalApiWarning \
            -p pytester {posargs: ./test/acceptance}

[testenv:integration]
description = Test integration with pytest-flakes

passenv = HOME

basepython = python3.6

setenv = ALLURE_INDENT_OUTPUT=yep

deps =
    pyhamcrest
    pytest-flakes
    pytest-rerunfailures
    pytest-xdist
    pytest-lazy-fixture
    mock
    {distshare}/allure-python-commons-2*.zip
    {distshare}/allure-python-commons-test-2*.zip

commands =
    py.test --basetemp={envtmpdir}/tmp \
            --alluredir={envtmpdir}/allure-results \
            -W ignore::pytest.PytestExperimentalApiWarning \
            -p pytester {posargs: ./test/integration}


[testenv:xdist]
passenv = HOME

basepython = python3.7

deps =
    pyhamcrest
    pytest-xdist
    mock
    {distshare}/allure-python-commons-2*.zip
    {distshare}/allure-python-commons-test-2*.zip

commands =
    py.test --basetemp={envtmpdir}/tmp \
            --alluredir={envtmpdir}/allure-results \
            -W ignore::pytest.PytestExperimentalApiWarning \
            -p pytester \
            -n 3 {posargs: ./test/acceptance}


# Run tests without result checking. It is useful for:
# 1. Getting demo report: `tox -e demo`
# 2. Executing separate test:
#    `tox -e demo -- -k test_single_feature_label` or
#    `tox -e demo -- ./test/steps/`
[testenv:demo]
basepython = python3.5

passenv = HOME

whitelist_externals = rm

setenv = ALLURE_INDENT_OUTPUT=yep

commands=
    rm -f {envtmpdir}/*.json
    - py.test -v --alluredir={envtmpdir} {posargs: ./test/}


[testenv:static-check]
basepython = python
skip_install = True

deps = flake8
;       flake8-import-order
       flake8-builtins
;       flake8-quotes

commands =
    flake8 src/ test/


[flake8]
max-line-length = 120
import-order-style = google
inline-quotes = "
