name: build allure python

on:
  pull_request:
    branches:
      - master

jobs:
  changes:
    name: Collect file changes
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            allure-behave:
              - allure-behave/**
              - allure-python-commons/**
              - allure-python-commons-test/**
            allure-nose2:
              - allure-nose2/**
              - allure-python-commons/**
              - allure-python-commons-test/**
            allure-pytest:
              - allure-pytest/**
              - allure-python-commons/**
              - allure-python-commons-test/**
            allure-pytest-bdd:
              - allure-pytest-bdd/**
              - allure-python-commons/**
              - allure-python-commons-test/**
            allure-robotframework:
              - allure-robotframework/**
              - allure-python-commons/**
              - allure-python-commons-test/**
            allure-python-commons: allure-python-commons/**
            allure-python-commons-test: allure-python-commons-test/**

  commons:
    name: Build commons
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache commons
        id: commons
        uses: actions/cache@v3
        with:
          path: dist/
          key: commons-${{ github.sha }}

      - name: Build python commons
        if: steps.commons.outputs.cache-hit != 'true'
        run: pip install build &&
             python -m build allure-python-commons --outdir dist/ &&
             python -m build allure-python-commons-test --outdir dist/

  linters:
    name: Static check
    runs-on: ubuntu-latest
    needs: [commons, changes]
    if: ${{ needs.changes.outputs.packages != '[]' }}
    strategy:
      matrix:
        package: ${{ fromJSON(needs.changes.outputs.packages) }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Get commons from cache
        id: commons
        uses: actions/cache@v3
        with:
          path: dist/
          key: commons-${{ github.sha }}

      - name: Install packages
        run: pip install dist/allure-python-commons*.tar.gz &&
             pip install ./${{ matrix.package }} &&
             pip install -r ${{ matrix.package }}/requirements.txt

      - name: Static check ${{ matrix.package }}
        working-directory: ${{ matrix.package }}
        run: poe linter

  build:
    name: Build package
    runs-on: ubuntu-latest
    needs: [linters, commons, changes]
    if: ${{ needs.changes.outputs.packages != '[]' }}
    strategy:
      matrix:
        package: ${{ fromJSON(needs.changes.outputs.packages) }}
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    env:
      TEST_TMP: /tmp
      ALLURE_INDENT_OUTPUT: yep
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get commons from cache
        id: commons
        uses: actions/cache@v3
        with:
          path: dist/
          key: commons-${{ github.sha }}

      - name: Install packages
        run: pip install dist/allure-python-commons*.tar.gz &&
             pip install ./${{ matrix.package }} &&
             pip install -r ${{ matrix.package }}/requirements.txt

      - name: Test ${{ matrix.package }}
        working-directory: ${{ matrix.package }}
        run: poe tests
